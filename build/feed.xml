<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Prismatik Blog</title>
    <atom:link href="http://blog.prismatik.com.au/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://blog.prismatik.com.au</link>
    <description>Things we find interesting.</description>
    <pubDate>Thu, 18 Jun 2015 10:00:00 +1000</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>What wasm means for the industry</title>
      <link>http://blog.prismatik.com.au/articles/what-wasm-means-for-the-industry/</link>
      <pubDate>Thu, 18 Jun 2015 10:00:00 +1000</pubDate>
      <guid isPermaLink="true">http://blog.prismatik.com.au/articles/what-wasm-means-for-the-industry/</guid>
      <author></author>
      <description>&lt;p&gt;It’s a red letter day for the web! Brendan Eich has &lt;a href=&quot;https://brendaneich.com/2015/06/from-asm-js-to-webassembly/&quot;&gt;announced&lt;/a&gt; that the major browser developers are working towards a standard called &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/HighLevelGoals.md&quot;&gt;WebAssembly&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;the-web-is-already-_amazing_-&quot;&gt;The web is already &lt;em&gt;amazing&lt;/em&gt;.&lt;/h3&gt;
&lt;p&gt;We can deploy a single codebase to every &lt;a href=&quot;https://wiki.apache.org/cordova/PlatformSupport&quot;&gt;major&lt;/a&gt; &lt;a href=&quot;https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps#windows&quot;&gt;platform&lt;/a&gt;. We can deliver &lt;a href=&quot;http://diveintohtml5.info/offline.html&quot;&gt;offline&lt;/a&gt; experiences that incorporate seamless &lt;a href=&quot;http://pouchdb.com/&quot;&gt;syncing&lt;/a&gt; and updating. We can create &lt;a href=&quot;https://github.com/rtc-io/rtc-mesh&quot;&gt;distributed peer-to-peer topologies&lt;/a&gt;. We can do &lt;a href=&quot;https://talky.io/&quot;&gt;audio and video chat&lt;/a&gt;. We can do rich &lt;a href=&quot;https://www.youtube.com/watch?v=XsyogXtyU9o&quot;&gt;3D graphics&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://prismatik.com.au/&quot;&gt;Prismatik&lt;/a&gt; is a polyglot consultancy. People bring us problems, we often solve those problems with computers. When we do, we pick The Right Tool for the job. The vast majority of the time, that ends up involving the web. The web has become such an incredible application platform in recent years that it’s impossible to ignore it. &lt;/p&gt;
&lt;p&gt;Until now, building for the web has meant building in Javascript. We love JS. It’s a much more impressive language than many people give it credit for. &lt;a href=&quot;https://nodejs.org/&quot;&gt;NodeJS&lt;/a&gt; allows us to write the same language on both ends of the wire, unlocking great stuff like &lt;a href=&quot;http://isomorphic.net/libraries&quot;&gt;isomorphic frameworks&lt;/a&gt; and portability of library code.&lt;/p&gt;
&lt;p&gt;What if it wasn’t just JS, though? Wouldn’t it be great to write whatever language you like and deploy to the web? Maybe this particular product makes more sense in Go. Maybe Lua, Elixir, Rust, Ruby, OCaml… pick your poison. WebAssembly (wasm) lays the foundation for making that a reality.&lt;/p&gt;
&lt;h3 id=&quot;but-can-t-you-already-do-that-&quot;&gt;But can’t you already do that?&lt;/h3&gt;
&lt;p&gt;Well, &lt;em&gt;kinda&lt;/em&gt;. You could already use &lt;a href=&quot;http://kripken.github.io/emscripten-site/&quot;&gt;emscripten&lt;/a&gt; to compile &lt;a href=&quot;http://llvm.org/&quot;&gt;LLVM&lt;/a&gt; code into &lt;a href=&quot;http://asmjs.org/&quot;&gt;asm.js&lt;/a&gt;. Some browsers had specific optimisation for asm.js code, making it &lt;a href=&quot;http://kripken.github.io/misc-js-benchmarks/banana/benchmark.html&quot;&gt;pretty dang snappy&lt;/a&gt;! While it worked, it was still a hack at heart. Asm.js and the emscripten pipeline was a fantastic proof of concept. It made us realise that this kind of thing was not only desirable, but feasible.&lt;/p&gt;
&lt;p&gt;The path laid out is that asm.js will effectively be paralleled and then superseded by wasm. The fact that it will no longer be based on Javascript means that we can evolve the capabilities of wasm without being bound by backwards compatibility with JS. That is &lt;em&gt;exciting&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;There’s still work to do. Language X will still need to support wasm as a compilation target (although if it’s already got a path to llvm, most of the work might already be done). To make it useful, there will need to be a way to call and manipulate the DOM. A reliable, planned standard will greatly encourage that work to occur.&lt;/p&gt;
&lt;p&gt;tl:dr, maybe we’ll see an isomorphic web framework in every major language. That would be &lt;em&gt;incredible&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Always bet on the web.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Technical Debt</title>
      <link>http://blog.prismatik.com.au/articles/technical-debt/</link>
      <pubDate>Thu, 04 Jun 2015 10:00:00 +1000</pubDate>
      <guid isPermaLink="true">http://blog.prismatik.com.au/articles/technical-debt/</guid>
      <author></author>
      <description>&lt;blockquote&gt;
&lt;h4 id=&quot;technical-debt-is-simultaneously-the-most-difficult-and-most-important-concept-we-must-communicate-to-our-clients-&quot;&gt;Technical debt is simultaneously the most difficult and most important concept we must communicate to our clients.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p&gt;Debt is a tool like any other. Paying for things on a high interest credit card is often okay.&lt;/p&gt;
&lt;p&gt;It’s especially okay if you’re purchasing an asset that will earn you money at a higher rate of return than the interest you’re paying. Incurring debt is fine, provided you have the means to support the obligation.&lt;/p&gt;
&lt;p&gt;You must never forget that the debt exists. You must either repay the principal or continue paying the interest. If you take too long repaying the principal, the cumulative interest payments will wipe out the profit you made on the asset.&lt;/p&gt;
&lt;h3 id=&quot;let-s-map-this-analogy-back-to-software&quot;&gt;Let’s map this analogy back to software&lt;/h3&gt;
&lt;p&gt;Your team has a level of equilibrium. &lt;strong&gt;This is the pace at which they can add new features while still having time to consolidate, test and refactor.&lt;/strong&gt; This pace can be maintained indefinitely. Pushing them beyond this level is putting features on your credit card.&lt;/p&gt;
&lt;p&gt;Your credit card has interest. The payment of that interest is that every feature you wish to add will take longer and have more bugs.&lt;/p&gt;
&lt;p&gt;This interest compounds, too. The longer the principal remains unpaid, the more workarounds and quick fixes your team will need to implement.&lt;/p&gt;
&lt;p&gt;To repay that principal, you need to spend some time on the technical fundamentals of your product. You need to spend some time adding new features &lt;em&gt;below&lt;/em&gt; your level of equilibrium. Your reward will be increased feature velocity, less rework and a happier, more engaged team. Your equilibrium level will be raised. Chances are, you’ll end up with some performance benefits along the way. (You know &lt;a href=&quot;http://www.fastcompany.com/1825005/how-one-second-could-cost-amazon-16-billion-sales&quot;&gt;how important performance is to your users&lt;/a&gt;, right?)&lt;/p&gt;
&lt;p&gt;Your development team already knows exactly where and how to invest this time. You just need to allow them to do it.&lt;/p&gt;
&lt;h3 id=&quot;but-software-isn-t-really-like-finance-right-&quot;&gt;But software isn’t really like finance, right?&lt;/h3&gt;
&lt;p&gt;Well, the analogy gets a lot more real when you recall that you pay your developers with money.&lt;/p&gt;
&lt;p&gt;If you run faster than your equilibrium, you will impact the future productivity of your team. You can regain that productivity either by lessening the pace of feature development or buying more development capacity. The former costs you money by lessening the ROI of your wage bill. The latter costs you money by, well, costing you money.&lt;/p&gt;
&lt;p&gt;I hear your inner accountant stirring. Before you start looking up your current benchmark &lt;a href=&quot;https://en.wikipedia.org/wiki/Internal_rate_of_return&quot;&gt;IRR&lt;/a&gt; and calculating &lt;a href=&quot;https://en.wikipedia.org/wiki/Net_present_value&quot;&gt;NPV&lt;/a&gt;, though, the economists need to have their turn. As always, there are &lt;a href=&quot;https://en.wikipedia.org/wiki/Externality&quot;&gt;externalities&lt;/a&gt; to be considered.&lt;/p&gt;
&lt;p&gt;The entire time this situation is going on, your product is slower, buggier and less stable than it needs to be. That’s a very difficult thing to price.&lt;/p&gt;
&lt;p&gt;Finally, you can only grow your team so large before it becomes &lt;a href=&quot;https://en.wikipedia.org/wiki/Diminishing_returns&quot;&gt;unwieldy and unproductive&lt;/a&gt;. You can only pile so many band-aids on top of one another before the whole tower comes &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyclomatic_complexity&quot;&gt;toppling over&lt;/a&gt;. Eventually, the bank will become concerned about your capacity to repay and will make a &lt;a href=&quot;https://en.wikipedia.org/wiki/Margin_%28finance%29#Margin_call&quot;&gt;margin call&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The key things to keep in mind are:&lt;/p&gt;
&lt;h5 id=&quot;1-the-principal-must-be-repaid-&quot;&gt;1. The principal must be repaid.&lt;/h5&gt;
&lt;h5 id=&quot;2-the-interest-compounds-&quot;&gt;2. The interest compounds.&lt;/h5&gt;
&lt;h5 id=&quot;3-don-t-let-yourself-be-surprised-by-that-margin-call-&quot;&gt;3. Don’t let yourself be surprised by that margin call.&lt;/h5&gt;
</description>
    </item>
    <item>
      <title>Benefits of Service Oriented Architectures</title>
      <link>http://blog.prismatik.com.au/articles/soa/</link>
      <pubDate>Wed, 06 May 2015 10:00:00 +1000</pubDate>
      <guid isPermaLink="true">http://blog.prismatik.com.au/articles/soa/</guid>
      <author></author>
      <description>&lt;p&gt;At Prismatik our core technical principle is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;use-the-right-tool-for-the-job-&quot;&gt;Use the right tool for the job.&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;p&gt;One of the things this results in is how we architect applications. For a lot of the things we build, a service oriented architecture (SOA) is a great choice.&lt;/p&gt;
&lt;p&gt;Step one in building an SOA is to separate your application into concerns. For example, authentication of users and gamification of user actions are two different things. In a traditional monolithic architecture, these would probably be lumped into one process.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/soa/monolith_1.png&quot; alt=&quot;A small monolith with two functions&quot;&gt;&lt;/p&gt;
&lt;p&gt;In an SOA these would be separate services, living in separate repositories, potentially on separate servers. This makes your architecture diagram a little more complex.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/soa/soa_1.png&quot; alt=&quot;A small SOA with two services&quot;&gt;&lt;/p&gt;
&lt;p&gt;But it makes the code we write wonderfully simple. In the monolith, you can separate your concerns into modules. That’s a fine approach, but it can get messy very quickly. It’s all too easy to let state and logic leak from one part of the application to another.&lt;/p&gt;
&lt;p&gt;In the SOA, there is a bright line of demarcation between your concerns. Each service can then be further compartmentalised with modules and other code organisation techniques.&lt;/p&gt;
&lt;p&gt;The maintenance burden of one 10,000 LOC app is about the same as two 6,000 LOC apps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/soa/monolith_2.png&quot; alt=&quot;A small monolith with two functions totalling 10k LOC&quot;&gt;
&lt;img src=&quot;/articles/soa/soa_2.png&quot; alt=&quot;A small SOA with two services each with 6k LOC&quot;&gt;&lt;/p&gt;
&lt;p&gt;So an SOA really starts paying dividends as your system grows. The monolith grows vertically while the SOA grows horizontally.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/soa/monolith_3.png&quot; alt=&quot;A larger monolith with four functions totalling 40k LOC&quot;&gt;
&lt;img src=&quot;/articles/soa/soa_3.png&quot; alt=&quot;A larger SOA with four services each with 6k LOC&quot;&gt;&lt;/p&gt;
&lt;p&gt;The burden of one 100,000 LOC app is &lt;em&gt;much&lt;/em&gt; greater than the burden of ten 6,000 LOC apps.&lt;/p&gt;
&lt;h2 id=&quot;benefits-to-team-structure&quot;&gt;Benefits to team structure&lt;/h2&gt;
&lt;p&gt;It’s certainly possible to build a monolith with a big team. It takes an awful lot of teamwork, though.&lt;/p&gt;
&lt;p&gt;It entails lots of developers who are all:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in the same repository,&lt;/li&gt;
&lt;li&gt;working on the same code,&lt;/li&gt;
&lt;li&gt;altering the same logic,&lt;/li&gt;
&lt;li&gt;making changes to shared models.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It becomes really easy to step on each other’s toes. This introduces collaboration overhead.&lt;/p&gt;
&lt;p&gt;You get:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Merge conflicts,&lt;/li&gt;
&lt;li&gt;big standups,&lt;/li&gt;
&lt;li&gt;cross-team meetings to co-ordinate work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There’s just no other way to deal with a 100,000 LOC product, though. It’s more than one or two people can handle.&lt;/p&gt;
&lt;p&gt;If you’re doing SOA right, though, each unit of functionality should be about the right size to hand to one or two developers. Tell them to call you if they hit a road block or once they’re finished.&lt;/p&gt;
&lt;p&gt;That’s not even the best bit, though! Each service has a clearly defined API. Deciding that up front takes a bit of planning effort. Remember, though, you’re just designing the API and not the implementation.&lt;/p&gt;
&lt;p&gt;The benefit to this is that your teams are no longer dependent on one another. It doesn’t matter that Bob hasn’t completed the authorisation service yet. Alice can still get on and build the gamification service, since she knows what Bob’s service is going to expect and what it’s going to return.&lt;/p&gt;
&lt;h2 id=&quot;benefits-to-maintainability&quot;&gt;Benefits to maintainability&lt;/h2&gt;
&lt;p&gt;Let’s say you’ve had an app in production for 12 months. We need to make some changes to the gamification module. Users want different tiers of rewards and we want to introduce a social following system.&lt;/p&gt;
&lt;h4 id=&quot;in-the-monolith-our-task-is-&quot;&gt;In the monolith, our task is:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;“Figure out how the existing logic has been implemented. Track down any intertwined logic. Either refactor it out or ensure your changes don’t break anything. Hopefully the last team left you a good test suite.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The early part of this task may well entail needing to understand the entire codebase. Not too hard in a 10k app. In a 100k app you might need to assign a whole team. If you have a 1000k app, call in a project manager to coordinate the discovery process amongst the teams and make sure you’re not planning to ship any other features in the near future.&lt;/p&gt;
&lt;h4 id=&quot;in-the-soa-our-task-is-&quot;&gt;In the SOA, our task is:&lt;/h4&gt;
&lt;p&gt;Broadly the same, but the total possible complexity is limited. It’s just a little service. Spend a few hours reading and grokking the 6k LOC, then make the change.&lt;/p&gt;
&lt;p&gt;There is a clear API contract with the rest of the application to guide us. If it turns out the last developer implemented things badly, just rewrite the thing from scratch. It’s a small task with a clear API and you have a reference implementation to work from.&lt;/p&gt;
&lt;p&gt;We’ll be done in no time. Add some extra API surface area to allow other services to subscribe to change events, then go implement that in a separate social following service.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s say you want to add the ability to process audio in real time. Most of your codebase is in a high-level interpreted language. That’s going to be tricky.&lt;/p&gt;
&lt;p&gt;The monolith has a problem. Maybe your language supports native modules? Can we write a library in C then bind to that? It’s a shame the only option is C/C++, it would be really nice to be able to do this in go/erlang/haskell/etc.&lt;/p&gt;
&lt;p&gt;In the SOA, we get to use the Right Tool For The Job! So long as the service adheres to its API, the rest of the architecture couldn’t care less what language its implemented in.&lt;/p&gt;
&lt;p&gt;Might it have been handy to use a graph/columnar/SQL/noSQL/in-memory database for that one little problem space in your app? No reason we can’t in an SOA.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;SOA is one of the tools available to us. It helps us build big, complex systems with a small, focused team. These systems then stay predictable and maintainable.&lt;/p&gt;
&lt;p&gt;We end up reaching for it a lot.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>8 Lists To Get You Started In The Sydney Startup Community</title>
      <link>http://blog.prismatik.com.au/articles/guide-to-the-sydney-startup-community/</link>
      <pubDate>Sun, 19 Apr 2015 10:00:00 +1000</pubDate>
      <guid isPermaLink="true">http://blog.prismatik.com.au/articles/guide-to-the-sydney-startup-community/</guid>
      <author></author>
      <description>&lt;blockquote&gt;
&lt;p&gt;The startup journey can be lonely, but ensuring you’re involved in the community will make it far more enjoyable and ultimately increase your chances of success.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These eight lists are designed to provide you with the best support in town, depending on which part of the journey your startup is at.&lt;/p&gt;
&lt;p&gt;If you’re in the idea stage it may be worth considering hackathons, meetups and networking events. If your startup is just getting going you might like to check out the list of incubators. Or, if you’re looking for further growth, check out the accelerators and venture funding.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-meetups-and-networking&quot;&gt;1. Meetups and Networking&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/sydney-tech-startup/&quot;&gt;Sydney Tech Startup meetup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/Silicon-Beach/&quot;&gt;Silicon Beach meetup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/Fishburners-Meetup/events/215667802/&quot;&gt;Fishburners’ Friday Pitches&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://headsoverheels.com.au/&quot;&gt;Heads over Heels&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sydjs.com/&quot;&gt;SydJS (Javascript developer meetup)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/Ruby-On-Rails-Oceania-Sydney/&quot;&gt;Ruby on Rails Oceania (Ruby on Rails developer meetup)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/ixda-sydney/&quot;&gt;IxDA (User Experience Design meetup)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.meetup.com/Product-Mavens/&quot;&gt;Product Mavens (Product management meetup)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-conference-and-camps&quot;&gt;2. Conference and Camps&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://sydstart.wordpress.com/&quot;&gt;SydStart (Tech startup showcase)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cebit.com.au/&quot;&gt;CeBIT (Business technology conference)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://tiecon.org.au/&quot;&gt;TieCon (Global technology conference)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.adtechaustralia.com/&quot;&gt;ad:tech (Advertising technology conference)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://yowconference.com.au/&quot;&gt;Yow! (Developer conference)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://v.campjs.com/&quot;&gt;Camp JS (Javascript developer camp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://railscamps.com/&quot;&gt;Rails Camp (Ruby on Rails developer camp)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-hackathons-and-pitch-competitions&quot;&gt;3. Hackathons and Pitch Competitions&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.seedstarsworld.com/event/seedstars-sydney-2015/&quot;&gt;Seedstars&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2015.battlehack.org/&quot;&gt;Battlehack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.govhack.org/&quot;&gt;GovHack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ecohack.org/&quot;&gt;EcoHack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://angelhack.com/events/&quot;&gt;AngelHack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sydneyappiness.com/&quot;&gt;Appiness&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nswcodeworks.com/&quot;&gt;Code Works&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/hackathon&quot;&gt;Facebook Hackathon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://girlgeeksydney.com/&quot;&gt;She Hacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hackagong.com/&quot;&gt;Hackagong&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-incubators&quot;&gt;4. Incubators&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://atp-innovations.com.au/&quot;&gt;ATP Innovations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bluechilli.com/&quot;&gt;Blue Chilli&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pollenizer.com/&quot;&gt;Pollenizer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fi.co/&quot;&gt;Founder Institute&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-accelerators&quot;&gt;5. Accelerators&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.slingshotters.com/&quot;&gt;Slingshot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://incubate.org.au/&quot;&gt;Incubate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.innovyz.com/&quot;&gt;ANZ Innovyz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sb.co/&quot;&gt;Springboard Enterprises&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://muru-d.com/&quot;&gt;Muru-D&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.elevate61.com.au/&quot;&gt;Elevate 61&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://25fifteen.com/&quot;&gt;25fifteen&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;6-angel-seed-venture-funding&quot;&gt;6. Angel / Seed / Venture Funding&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.one-ventures.com.au/&quot;&gt;One Ventures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sydneyangels.net.au/&quot;&gt;Sydney Angels&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tankstream.vc/&quot;&gt;Tank Stream Ventures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sxvp.com/&quot;&gt;Southern Cross Ventures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rightclickcapital.com/&quot;&gt;Right Click Capital&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.greenlanedigital.com.au/&quot;&gt;Green Lane Digital&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.blackcitrus.com.au/&quot;&gt;Black Citrus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://optusinnov8seed.com.au/&quot;&gt;Optus Innov8 Seed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://airtreevc.com/&quot;&gt;Airtree Ventures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blackbird.vc/&quot;&gt;Blackbird Ventures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mhcarnegie.com/&quot;&gt;MH Carnegie&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.innovationcapital.net/&quot;&gt;Innovation Capital&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://innovationbay.com/&quot;&gt;Innovation Bay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sydneyseedfund.com.au/&quot;&gt;Sydney Seed Fund&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;7-education&quot;&gt;7. Education&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://generalassemb.ly&quot;&gt;General Assembly (Web Development, User Experience Design, Product Management, Digital Marketing)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://thecoderfactory.com/&quot;&gt;Coder Factory (Web Development)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.brainmates.com.au/&quot;&gt;Brainmates&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;8-co-working-spaces-and-offices&quot;&gt;8. Co-working spaces and offices&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://fishburners.org/&quot;&gt;Fishburners&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.commonroomsyd.com.au/&quot;&gt;Common Room&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://startsoc.wordpress.com/icentral/&quot;&gt;iCentral&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://tankstreamlabs.com/&quot;&gt;Tank Stream Labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://theworkben.ch/&quot;&gt;Workbench&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hubaustralia.com/location/sydney/&quot;&gt;Hub Sydney&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://blog.prismatik.com.au/articles/hello-world/</link>
      <pubDate>Tue, 17 Mar 2015 11:00:00 +1100</pubDate>
      <guid isPermaLink="true">http://blog.prismatik.com.au/articles/hello-world/</guid>
      <author></author>
      <description>&lt;p&gt;Hello world!&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>